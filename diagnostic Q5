"""
Figure out what is wrong with this buggy code and fix it!

def divide_and_round(n):
   """
   Divides an integer n by 2 and rounds 
   up to the nearest whole number
   """
   if n % 2 == 0:
      n = n / 2
   else:
      n = (n + 1) / 2

def main():
   n = 10
   divide_and_round(n)
   print(n)  # should print 5
Concepts:
This problem focused on functions are return values.
If you found it confusing, here are a few resources: The Functions Chapter covers functions and return values​.
Return values are notoriously one of the hardest concepts in the first half of CS106A.

"""


"""
Part A: The program prints 10. 
The divide_and_round function correctly divides n by 2 and rounds up 
to the nearest whole number, but does not return or print n. Therefore, the 
value of n in main’s print statement is still 10, and so 10 gets printed.
"""

"""
Part B: Here is the fixed program
"""
def divide_and_round(n):
   """
   Divides an integer n by 2 and rounds 
   up to the nearest whole number
   """
   if n % 2 == 0:
      n = n / 2
   else:
      n = (n + 1) / 2
   # this function should return n
   return n

def main():
   n = 10
   # use the x = change(x) paradigm to make sure main's n is changed
   n = divide_and_round(n)
   print(n)
   
   
   
   
   
